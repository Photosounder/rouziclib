extern double eval_polynomial(double x, double *c, int degree);
extern void eval_polynomial_mpfr(real y, real x, real *c, int degree);
extern void polynomial_addition(double *a, int adeg, double *b, int bdeg, double *c);
extern void polynomial_subtraction(double *a, int adeg, double *b, int bdeg, double *c);
extern void polynomial_scalar_mul(double *a, int adeg, double m, double *c);
extern int polynomial_multiplication(double *a, int adeg, double *b, int bdeg, double *c, int cdeg);
extern double *polynomial_power(double *a, int adeg, int n, int *maxdegp);
extern void polynomial_x_substitution(double *a, int adeg, double *xs, int xsdeg, double *c);
extern void polynomial_addition_mpfr(real *a, int adeg, real *b, int bdeg, real *c);
extern void polynomial_subtraction_mpfr(real *a, int adeg, real *b, int bdeg, real *c);
extern void polynomial_scalar_mul_mpfr(real *a, int adeg, real m, real *c);
extern int polynomial_multiplication_mpfr(real *a, int adeg, real *b, int bdeg, real *c, int cdeg);
extern real *polynomial_power_mpfr(real *a, int adeg, int n, int *maxdegp);
extern void polynomial_x_substitution_mpfr(real *a, int adeg, real *xs, int xsdeg, real *c);
extern double *chebyshev_coefs(int degree);
extern real *chebyshev_coefs_mpfr(int degree);
extern double chebyshev_node(int degree, int node);
extern void chebyshev_node_mpfr(real v, int degree, int node);
extern void polynomial_fit_on_points(xy_t *p, double *c, int degree);
extern void polynomial_fit_on_points_mpfr(real *x, real *y, real *c, int degree);
extern void polynomial_fit_on_function(double (*f)(double), double start, double end, double *c, int degree);
extern void polynomial_fit_on_function_mpfr(void (*f)(real,real), real start, real end, real *c, int degree);
extern double chebyshev_multiplier_by_dct(double *y, int p_count, int id);
extern void polynomial_fit_on_function_by_dct(double (*f)(double), double start, double end, double *c, int degree);
extern void chebyshev_multiplier_by_dct_mpfr(real v, real *y, int p_count, int id);
extern void polynomial_fit_on_function_by_dct_mpfr(void (*f)(real,real), real start, real end, real *c, int degree);
